#!/bin/sh
set -e

export PGPASSWORD="$POSTGRES_PASSWORD"
export WEBLATE_CMD="/usr/local/bin/weblate"

if [ -z "$POSTGRES_HOST" ] ; then
    export POSTGRES_HOST=database
fi
if [ -z "$POSTGRES_PORT" ] ; then
    export POSTGRES_PORT=
fi

# Wait for database to get available
until psql -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -U "$POSTGRES_USER" -c 'SELECT 1' > /dev/null 2>&1 ; do
  >&2 echo "Postgres is unavailable - sleeping"
  sleep 1
done

unset PGPASSWORD

>&2 echo "Postgres is up"

# Generate secret
if [ ! -f /app/data/secret ] ; then
    # https://github.com/django/django/blob/1.10.2/django/utils/crypto.py#L54-L56
    python -c "from django.utils.crypto import get_random_string; print get_random_string(50)" > /app/data/secret
fi

# Migrate database to current version and collect static files
if [ "x$1" = "xrunserver" ] ; then
    $WEBLATE_CMD migrate
    $WEBLATE_CMD collectstatic --noinput
    if [ -n "$WEBLATE_ADMIN_PASSWORD" ] ; then
        # This will fail on consequent runs
        $WEBLATE_CMD createadmin --password="$WEBLATE_ADMIN_PASSWORD" --update --email="$WEBLATE_ADMIN_EMAIL" --name="$WEBLATE_ADMIN_NAME" || true
    fi
    # Create supervisor log dirs and files
    LOGFILE=/var/log/supervisor/supervisord.log
    mkdir -p `dirname $LOGFILE`
    touch $LOGFILE
    #  Execute supervisor
    exec supervisord -n
fi

# Start the management command
exec $WEBLATE_CMD "$@"
